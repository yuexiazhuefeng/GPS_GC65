#ifndef _LED_H
#define _LED_H
#include "stm32f0xx.h" //wei20160601


//PA0 GSM POWER 
#define  GSM_POWERON_PIN  GPIO_Pin_0
#define GSM_POWERON_PORT  GPIOA

//PA1 GPS POWER
#define  GPS_POWERON_PIN  GPIO_Pin_1
#define GPS_POWERON_PORT  GPIOA
//PA11 SHUT DOWN OIL
#define  OIL_BREAK_PIN  GPIO_Pin_11
#define OIL_BREAK_PORT  GPIOA
//PA12 ACC CHECK
#define  ACC_PIN  GPIO_Pin_12
#define ACC_PORT  GPIOA
//PA8  ARALM
#define  ALARM_PIN  GPIO_Pin_8
#define ALARM_PORT  GPIOA

// PF6  SCL LIS3DH
//PF7 SDA 

//PB5  LIS3DH INT1
#define  SHAKE_PIN  GPIO_Pin_5
#define  SHAKE_PORT  GPIOB
//PB6 LIS3DH INT2



//gsm uart1 PA9 PA10

//PB14 GSM POWER KEY
#define  GSM_POWERKEY_PIN  GPIO_Pin_14
#define GSM_POWERKEY_PORT  GPIOB
//PB15 GSM RING
#define GSM_RING_PIN GPIO_Pin_15
#define GSM_RING_PORT  GPIOB


//GPS UART2 PA2 PA3

//拉高进入休眠，拉低唤醒
#define DTR_PIN     GPIO_Pin_11
#define DTR_PORT   GPIOB

#define LEDn                   3
//pA8  LED1    SYSTEM POWER LED
#define LED1_PIN					GPIO_Pin_4	 
#define LED1_GPIO_PORT		GPIOA
#define LED1_GPIO_CLK			RCC_AHBPeriph_GPIOA
//PB12  LED2  GPS POWER LED
#define LED2_PIN					GPIO_Pin_12	
#define LED2_GPIO_PORT		GPIOB
#define LED2_GPIO_CLK			RCC_AHBPeriph_GPIOB
//PB13  LED3  GSM POWER LED
#define LED3_PIN					GPIO_Pin_13	
#define LED3_GPIO_PORT		GPIOB
#define LED3_GPIO_CLK			RCC_AHBPeriph_GPIOB

extern GPIO_TypeDef* GPIO_PORT[LEDn] ;
extern const uint16_t GPIO_PIN[LEDn] ;
extern const uint32_t GPIO_CLK[LEDn] ;





typedef enum
{
  FALSE = 0, TRUE  = !FALSE
}
bool;

//led work struct
typedef struct _LED
{
	u16 freq;
	u16 counter;
	bool power;
	bool flash;
}LED_STRUCT;

extern LED_STRUCT LED_yellow;
extern LED_STRUCT LED_red;

/**********************************************************************
//说明: 设置所有的IO口
//参数1:无
//返回:无
**********************************************************************/
void IO_Init(void);
/******wei,20160531****************************************************************
//说明: 设置DTR脚是输入还是输出
//参数1:无
//返回:无
**********************************************************************/
//wei,20160803for space,只有超低功耗模式，不再需要GMS模块休眠了，而是直接断电 extern void DTR_PIN_MODE_Contrl(FunctionalState New_state);

extern void RING_EXTI0_Config(void);
/**********************************************************************
//说明: 设置GSM电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
//wei20160531 void GSM_Power(bool status);
extern u8 GSM_Power(bool status); //wei20160531
/**********************************************************************
//说明: 设置远程关门
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_REMOTE_CLOSE(u32 time);
/**********************************************************************
//说明: 设置外接摄像头电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_CAMERA_POWER(bool status);

/**********************************************************************
//说明: 设置断油用的电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_OIL_BREAK_POWER(bool status);
/**********************************************************************
//说明: 设置远程开门的电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_REMOTE_OPEN(u32 time);
/**********************************************************************
//说明: 设置GSM的供电电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_GSM_POWERON(bool status);

/**********************************************************************
//说明: 设置手柄和GPS的供电电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_HANDLE_GPS_POWER(bool status);
/**********************************************************************
//说明: 设置断油
//参数1: TRUE 表断油；FALSE:表不断
//返回:无
**********************************************************************/
void set_OIL_BREAK(bool status);
/**********************************************************************
//说明: 设置GSM的power key
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_GSM_POWERKEY(bool status);
/**********************************************************************
//说明: 设置手柄喇叭静音
//参数1: TRUE 表设置静音；FALSE:不静音
//返回:无
**********************************************************************/
void set_HANDLE_SPEAKER_MUTE(bool status);
/**********************************************************************
//说明: 设置整个电路板的电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_MAINPOWER(bool status);
/**********************************************************************
//说明: 设置喇叭输出
//参数1: TRUE 表输出；FALSE:表不输出
//返回:无
**********************************************************************/
void set_SPEAKEROUT(bool status);
/**********************************************************************
//说明: 设置外接喇叭静音
//参数: 无
//返回: TRUE 表静音；FALSE:表不静音
**********************************************************************/
void  set_EXTERNAL_SPEAKER_MUTE(bool status);


/**********************************************************************
//说明: 读取GSM ring 脚 状态
//参数: 无
//返回: TRUE 表有效，有电话或短信呼入；FALSE:表无电话或短信
**********************************************************************/
bool  get_GSM_RING_status(void);

/**********************************************************************
//说明: 读取GPS天线状态
//参数: 无
//返回: //#define   GPS_ANTENNA_OK            0
//#define   GPS_ANTENNA_N0_CONNECT    1
//#define   GPS_ANTENNA_SHORT         2
//#define   GPS_ANTENNA_NO_USE        3
**********************************************************************/
u8  get_GPS_ANTENNA(void);

/**********************************************************************
//说明: 读取低传感器2的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_LOWSENSOR2_status(void);
/**********************************************************************
//说明: 读取振动传感器的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_SHAKE_status(void);
/**********************************************************************
//说明: 读取刹车传感器的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_BRAKE_status(void);
/**********************************************************************
//说明: 读取门边检测传感器的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_DOOR_status(void);

/**********************************************************************
//说明: 读取ACC传感器2的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_ACC_CHECK_status(void);
/**********************************************************************
//说明: 读取紧急报警的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_ALARM_status(void);

/**********************************************************************
//说明: 读取左转向灯的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_LIGHT_TURNLEFT_status(void);
/**********************************************************************
//说明: 读取右转向灯的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_LIGHT_TURNRIGHT_status(void);

/**********************************************************************
//说明: 精确延时指定时间，单位ms
//参数: 延时的时间常数
//返回: 无
**********************************************************************/
void delayms(u32 num);

void LED_Key_Init(void);
void LED_On(uint8_t x);
void LED_Off(uint8_t x);
/**********************************************************************
//说明: 设置LED
//参数1:LED句柄()
//参数2:是否需要闪烁(0:关，1:打开)
//参数3:闪烁频率(1~1400hz)
//参数4:开关(0:关，1:打开)
//返回:是否成功(0:失败，1:成功)
**********************************************************************/
bool setled(LED_STRUCT* led,bool flash,u16 freq,bool power);
/**********************************************************************
//说明: GPS 电源控制
//参数: 开或者关
//返回: 无
**********************************************************************/
void set_GPS_POWERON(bool status);
/**********************************************************************
//说明: GSM 上电
//参数: 无
//返回: 无
**********************************************************************/
void GSM_reset(void);
/******wei20160601****************************************************************
//说明: 发送15个AT，判断MCU有没有和GSM模块通信成功。
//参数: 无
//返回: 大于0，成功；  等于0，失败
**********************************************************************/
extern u8 Check_AT(void);//wei20160601
/**********************************************************************
//说明: GSM 休眠
//参数: TRUE 进入，FALSE 推出
//返回: 无
**********************************************************************/
void set_GSM_SLEEP(bool status);

bool  get_SHAKE_status(void);

#endif /*_LED_H*/
