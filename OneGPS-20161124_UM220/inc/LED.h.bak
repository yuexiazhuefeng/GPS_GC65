#ifndef _LED_H
#define _LED_H



typedef enum
{
  FALSE = 0, TRUE  = !FALSE
}
bool;

//led work struct
typedef struct _LED
{
	u16 freq;
	u16 counter;
	bool power;
	bool flash;
}LED_STRUCT;

extern LED_STRUCT LED_yellow;
extern LED_STRUCT LED_red;

/**********************************************************************
//说明: 设置所有的IO口
//参数1:无
//返回:无
**********************************************************************/
void IO_Init(void);
/**********************************************************************
//说明: 设置GSM电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void GSM_Power(bool status);
/**********************************************************************
//说明: 设置远程关门
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_REMOTE_CLOSE(u32 time);
/**********************************************************************
//说明: 设置外接摄像头电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_CAMERA_POWER(bool status);

/**********************************************************************
//说明: 设置断油用的电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_OIL_BREAK_POWER(bool status);
/**********************************************************************
//说明: 设置远程开门的电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_REMOTE_OPEN(u32 time);
/**********************************************************************
//说明: 设置GSM的供电电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_GSM_POWERON(bool status);

/**********************************************************************
//说明: 设置手柄和GPS的供电电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_HANDLE_GPS_POWER(bool status);
/**********************************************************************
//说明: 设置断油
//参数1: TRUE 表断油；FALSE:表不断
//返回:无
**********************************************************************/
void set_OIL_BREAK(bool status);
/**********************************************************************
//说明: 设置GSM的power key
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_GSM_POWERKEY(bool status);
/**********************************************************************
//说明: 设置手柄喇叭静音
//参数1: TRUE 表设置静音；FALSE:不静音
//返回:无
**********************************************************************/
void set_HANDLE_SPEAKER_MUTE(bool status);
/**********************************************************************
//说明: 设置整个电路板的电源
//参数1: TRUE 表上电；FALSE:表断电
//返回:无
**********************************************************************/
void set_MAINPOWER(bool status);
/**********************************************************************
//说明: 设置喇叭输出
//参数1: TRUE 表输出；FALSE:表不输出
//返回:无
**********************************************************************/
void set_SPEAKEROUT(bool status);
/**********************************************************************
//说明: 设置外接喇叭静音
//参数: 无
//返回: TRUE 表静音；FALSE:表不静音
**********************************************************************/
void  set_EXTERNAL_SPEAKER_MUTE(bool status);


/**********************************************************************
//说明: 读取GSM ring 脚 状态
//参数: 无
//返回: TRUE 表有效，有电话或短信呼入；FALSE:表无电话或短信
**********************************************************************/
bool  get_GSM_RING_status(void);

/**********************************************************************
//说明: 读取GPS天线状态
//参数: 无
//返回: //#define   GPS_ANTENNA_OK            0
//#define   GPS_ANTENNA_N0_CONNECT    1
//#define   GPS_ANTENNA_SHORT         2
//#define   GPS_ANTENNA_NO_USE        3
**********************************************************************/
u8  get_GPS_ANTENNA(void);

/**********************************************************************
//说明: 读取低传感器2的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_LOWSENSOR2_status(void);
/**********************************************************************
//说明: 读取振动传感器的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_SHAKE_status(void);
/**********************************************************************
//说明: 读取刹车传感器的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_BRAKE_status(void);
/**********************************************************************
//说明: 读取门边检测传感器的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_DOOR_status(void);

/**********************************************************************
//说明: 读取ACC传感器2的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_ACC_CHECK_status(void);
/**********************************************************************
//说明: 读取左转向灯的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_LIGHT_TURNLEFT_status(void);
/**********************************************************************
//说明: 读取右转向灯的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_LIGHT_TURNRIGHT_status(void);
/**********************************************************************
//说明: 读取远光灯灯的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_LIGHT_HIGHBEAM_status(void);
/**********************************************************************
//说明: 读取紧急报警按钮的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_EMERGEN_status(void);
/**********************************************************************
//说明: 读取发动机的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_ENGINE_status(void);
/**********************************************************************
//说明: 读取低传感器3的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_LOWSENSOR3_status(void);
/**********************************************************************
//说明: 读取低传感器4的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_LOWSENSOR4_status(void);
/**********************************************************************
//说明: 读取高传感器5的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_HIGHSENSOR5_status(void);
/**********************************************************************
//说明: 读取低传感器1的状态
//参数: 无
//返回: TRUE 表有效；FALSE:表无效
**********************************************************************/
bool  get_LOWSENSOR1_status(void);
/**********************************************************************
//说明: 精确延时指定时间，单位ms
//参数: 延时的时间常数
//返回: 无
**********************************************************************/
void delayms(u32 num);

void LED_Key_Init(void);
void LED_On(uint8_t x);
void LED_Off(uint8_t x);
/**********************************************************************
//说明: 设置LED
//参数1:LED句柄()
//参数2:是否需要闪烁(0:关，1:打开)
//参数3:闪烁频率(1~1400hz)
//参数4:开关(0:关，1:打开)
//返回:是否成功(0:失败，1:成功)
**********************************************************************/
bool setled(LED_STRUCT* led,bool flash,u16 freq,bool power);

#endif /*_LED_H*/
